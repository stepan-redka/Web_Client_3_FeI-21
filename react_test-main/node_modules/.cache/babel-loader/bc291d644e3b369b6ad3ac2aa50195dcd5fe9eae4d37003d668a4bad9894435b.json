{"ast":null,"code":"import React,{useState}from'react';import QuestionSelector from'./QuestionSelector';import Test from'./Test';import{jsx as _jsx}from\"react/jsx-runtime\";const testData={testName:\"Bakery Test\",questions:[{question:\"Which ingredient is essential for making bread rise?\",answers:[{answer:\"Yeast\",isCorrect:true},{answer:\"Sugar\",isCorrect:false},{answer:\"Salt\",isCorrect:false},{answer:\"Butter\",isCorrect:false}]},{question:\"What is the main ingredient in croissants?\",answers:[{answer:\"Butter\",isCorrect:true},{answer:\"Sugar\",isCorrect:false},{answer:\"Flour\",isCorrect:false},{answer:\"Eggs\",isCorrect:false}]},{question:\"What type of flour is typically used to make cakes?\",answers:[{answer:\"Cake flour\",isCorrect:true},{answer:\"All-purpose flour\",isCorrect:false},{answer:\"Whole wheat flour\",isCorrect:false},{answer:\"Bread flour\",isCorrect:false}]}]};const App=()=>{const[selectedQuestions,setSelectedQuestions]=useState([]);const[showResult,setShowResult]=useState(false);const handleQuestionsSelect=selectedQuestions=>{setSelectedQuestions(selectedQuestions);setShowResult(false);};const handleShowResult=()=>{setShowResult(true);};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:selectedQuestions.length===0?/*#__PURE__*/_jsx(QuestionSelector,{testData:testData,onQuestionsSelect:handleQuestionsSelect}):/*#__PURE__*/_jsx(Test,{selectedQuestions:selectedQuestions,testData:testData,onShowResult:handleShowResult})});};export default App;","map":{"version":3,"names":["React","useState","QuestionSelector","Test","jsx","_jsx","testData","testName","questions","question","answers","answer","isCorrect","App","selectedQuestions","setSelectedQuestions","showResult","setShowResult","handleQuestionsSelect","handleShowResult","className","children","length","onQuestionsSelect","onShowResult"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QuestionSelector from './QuestionSelector';\nimport Test from './Test';\n\nconst testData = {\n  testName: \"Bakery Test\",\n  questions: [\n    {\n      question: \"Which ingredient is essential for making bread rise?\",\n      answers: [\n        {\n          answer: \"Yeast\",\n          isCorrect: true,\n        },\n        {\n          answer: \"Sugar\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Salt\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Butter\",\n          isCorrect: false,\n        }\n      ],\n    },\n    {\n      question: \"What is the main ingredient in croissants?\",\n      answers: [\n        {\n          answer: \"Butter\",\n          isCorrect: true,\n        },\n        {\n          answer: \"Sugar\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Flour\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Eggs\",\n          isCorrect: false,\n        }\n      ],\n    },\n    {\n      question: \"What type of flour is typically used to make cakes?\",\n      answers: [\n        {\n          answer: \"Cake flour\",\n          isCorrect: true,\n        },\n        {\n          answer: \"All-purpose flour\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Whole wheat flour\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Bread flour\",\n          isCorrect: false,\n        }\n      ],\n    }\n  ],\n};\nconst App = () => {\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n\n  const handleQuestionsSelect = (selectedQuestions) => {\n    setSelectedQuestions(selectedQuestions);\n    setShowResult(false);\n  };\n\n  const handleShowResult = () => {\n    setShowResult(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {selectedQuestions.length === 0 ? (\n        <QuestionSelector testData={testData} onQuestionsSelect={handleQuestionsSelect} />\n      ) : (\n        <Test selectedQuestions={selectedQuestions} testData={testData} onShowResult={handleShowResult} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,gBAAgB,KAAM,oBAAoB,CACjD,MAAO,CAAAC,IAAI,KAAM,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAG,CACfC,QAAQ,CAAE,aAAa,CACvBC,SAAS,CAAE,CACT,CACEC,QAAQ,CAAE,sDAAsD,CAChEC,OAAO,CAAE,CACP,CACEC,MAAM,CAAE,OAAO,CACfC,SAAS,CAAE,IACb,CAAC,CACD,CACED,MAAM,CAAE,OAAO,CACfC,SAAS,CAAE,KACb,CAAC,CACD,CACED,MAAM,CAAE,MAAM,CACdC,SAAS,CAAE,KACb,CAAC,CACD,CACED,MAAM,CAAE,QAAQ,CAChBC,SAAS,CAAE,KACb,CAAC,CAEL,CAAC,CACD,CACEH,QAAQ,CAAE,4CAA4C,CACtDC,OAAO,CAAE,CACP,CACEC,MAAM,CAAE,QAAQ,CAChBC,SAAS,CAAE,IACb,CAAC,CACD,CACED,MAAM,CAAE,OAAO,CACfC,SAAS,CAAE,KACb,CAAC,CACD,CACED,MAAM,CAAE,OAAO,CACfC,SAAS,CAAE,KACb,CAAC,CACD,CACED,MAAM,CAAE,MAAM,CACdC,SAAS,CAAE,KACb,CAAC,CAEL,CAAC,CACD,CACEH,QAAQ,CAAE,qDAAqD,CAC/DC,OAAO,CAAE,CACP,CACEC,MAAM,CAAE,YAAY,CACpBC,SAAS,CAAE,IACb,CAAC,CACD,CACED,MAAM,CAAE,mBAAmB,CAC3BC,SAAS,CAAE,KACb,CAAC,CACD,CACED,MAAM,CAAE,mBAAmB,CAC3BC,SAAS,CAAE,KACb,CAAC,CACD,CACED,MAAM,CAAE,aAAa,CACrBC,SAAS,CAAE,KACb,CAAC,CAEL,CAAC,CAEL,CAAC,CACD,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC9D,KAAM,CAACe,UAAU,CAAEC,aAAa,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAAAiB,qBAAqB,CAAIJ,iBAAiB,EAAK,CACnDC,oBAAoB,CAACD,iBAAiB,CAAC,CACvCG,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAGA,CAAA,GAAM,CAC7BF,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,CAED,mBACEZ,IAAA,QAAKe,SAAS,CAAC,KAAK,CAAAC,QAAA,CACjBP,iBAAiB,CAACQ,MAAM,GAAK,CAAC,cAC7BjB,IAAA,CAACH,gBAAgB,EAACI,QAAQ,CAAEA,QAAS,CAACiB,iBAAiB,CAAEL,qBAAsB,CAAE,CAAC,cAElFb,IAAA,CAACF,IAAI,EAACW,iBAAiB,CAAEA,iBAAkB,CAACR,QAAQ,CAAEA,QAAS,CAACkB,YAAY,CAAEL,gBAAiB,CAAE,CAClG,CACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}