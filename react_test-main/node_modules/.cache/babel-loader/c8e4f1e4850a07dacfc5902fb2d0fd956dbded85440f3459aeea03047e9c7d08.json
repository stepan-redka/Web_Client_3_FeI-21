{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\QuestionSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './QuestionSelector.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionSelector = ({\n  testData,\n  onQuestionsSelect\n}) => {\n  _s();\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(testData.questions.length).fill(null));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showStartButton, setShowStartButton] = useState(true);\n  const handleAnswerSelect = answerIndex => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[currentQuestionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n  const handleStartTest = () => {\n    setShowStartButton(false);\n  };\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n  const handleQuestionsSubmit = () => {\n    onQuestionsSelect(selectedAnswers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-selector-container\",\n    children: [showStartButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartTest,\n      className: \"start-test-button\",\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), currentQuestionIndex < testData.questions.length && !showStartButton && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-selector-header\",\n        children: testData.questions[currentQuestionIndex].question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), testData.questions[currentQuestionIndex].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `answer${index}`,\n          name: \"answers\",\n          value: index,\n          checked: selectedAnswers[currentQuestionIndex] === index,\n          onChange: () => handleAnswerSelect(index),\n          className: \"question-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `answer${index}`,\n          children: answer.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        className: \"next-question-button\",\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), currentQuestionIndex === testData.questions.length && !showStartButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleQuestionsSubmit,\n      className: \"submit-questions-button\",\n      children: \"Submit Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionSelector, \"TsyOT+YNgV0X9Lnd/DE/tE5dzJo=\");\n_c = QuestionSelector;\nexport default QuestionSelector;\nvar _c;\n$RefreshReg$(_c, \"QuestionSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionSelector","testData","onQuestionsSelect","_s","selectedAnswers","setSelectedAnswers","Array","questions","length","fill","currentQuestionIndex","setCurrentQuestionIndex","showStartButton","setShowStartButton","handleAnswerSelect","answerIndex","newSelectedAnswers","handleStartTest","handleNextQuestion","handleQuestionsSubmit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","question","answers","map","answer","index","type","id","name","value","checked","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/QuestionSelector.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './QuestionSelector.css';\n\nconst QuestionSelector = ({ testData, onQuestionsSelect }) => {\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(testData.questions.length).fill(null));\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [showStartButton, setShowStartButton] = useState(true);\n\n  const handleAnswerSelect = (answerIndex) => {\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[currentQuestionIndex] = answerIndex;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n\n  const handleStartTest = () => {\n    setShowStartButton(false);\n  };\n\n  const handleNextQuestion = () => {\n    setCurrentQuestionIndex(currentQuestionIndex + 1);\n  };\n\n  const handleQuestionsSubmit = () => {\n    onQuestionsSelect(selectedAnswers);\n  };\n\n  return (\n    <div className=\"question-selector-container\">\n      {showStartButton && (\n        <button onClick={handleStartTest} className=\"start-test-button\">Start Quiz</button>\n      )}\n\n      {currentQuestionIndex < testData.questions.length && !showStartButton && (\n        <>\n          <h2 className=\"question-selector-header\">{testData.questions[currentQuestionIndex].question}</h2>\n          {testData.questions[currentQuestionIndex].answers.map((answer, index) => (\n            <div key={index} className=\"question-item\">\n              <input\n                type=\"radio\"\n                id={`answer${index}`}\n                name=\"answers\"\n                value={index}\n                checked={selectedAnswers[currentQuestionIndex] === index}\n                onChange={() => handleAnswerSelect(index)}\n                className=\"question-checkbox\"\n              />\n              <label htmlFor={`answer${index}`}>{answer.answer}</label>\n            </div>\n          ))}\n          <button onClick={handleNextQuestion} className=\"next-question-button\">Next Question</button>\n        </>\n      )}\n\n      {currentQuestionIndex === testData.questions.length && !showStartButton && (\n        <button onClick={handleQuestionsSubmit} className=\"submit-questions-button\">Submit Questions</button>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAACW,KAAK,CAACL,QAAQ,CAACM,SAAS,CAACC,MAAM,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACnG,MAAM,CAACC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMmB,kBAAkB,GAAIC,WAAW,IAAK;IAC1C,MAAMC,kBAAkB,GAAG,CAAC,GAAGZ,eAAe,CAAC;IAC/CY,kBAAkB,CAACN,oBAAoB,CAAC,GAAGK,WAAW;IACtDV,kBAAkB,CAACW,kBAAkB,CAAC;EACxC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BJ,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMK,kBAAkB,GAAGA,CAAA,KAAM;IAC/BP,uBAAuB,CAACD,oBAAoB,GAAG,CAAC,CAAC;EACnD,CAAC;EAED,MAAMS,qBAAqB,GAAGA,CAAA,KAAM;IAClCjB,iBAAiB,CAACE,eAAe,CAAC;EACpC,CAAC;EAED,oBACEP,OAAA;IAAKuB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,GACzCT,eAAe,iBACdf,OAAA;MAAQyB,OAAO,EAAEL,eAAgB;MAACG,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACnF,EAEAhB,oBAAoB,GAAGT,QAAQ,CAACM,SAAS,CAACC,MAAM,IAAI,CAACI,eAAe,iBACnEf,OAAA,CAAAE,SAAA;MAAAsB,QAAA,gBACExB,OAAA;QAAIuB,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAEpB,QAAQ,CAACM,SAAS,CAACG,oBAAoB,CAAC,CAACiB;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAChGzB,QAAQ,CAACM,SAAS,CAACG,oBAAoB,CAAC,CAACkB,OAAO,CAACC,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAClElC,OAAA;QAAiBuB,SAAS,EAAC,eAAe;QAAAC,QAAA,gBACxCxB,OAAA;UACEmC,IAAI,EAAC,OAAO;UACZC,EAAE,EAAG,SAAQF,KAAM,EAAE;UACrBG,IAAI,EAAC,SAAS;UACdC,KAAK,EAAEJ,KAAM;UACbK,OAAO,EAAEhC,eAAe,CAACM,oBAAoB,CAAC,KAAKqB,KAAM;UACzDM,QAAQ,EAAEA,CAAA,KAAMvB,kBAAkB,CAACiB,KAAK,CAAE;UAC1CX,SAAS,EAAC;QAAmB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACF7B,OAAA;UAAOyC,OAAO,EAAG,SAAQP,KAAM,EAAE;UAAAV,QAAA,EAAES,MAAM,CAACA;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAVjDK,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWV,CACN,CAAC,eACF7B,OAAA;QAAQyB,OAAO,EAAEJ,kBAAmB;QAACE,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC5F,CACH,EAEAhB,oBAAoB,KAAKT,QAAQ,CAACM,SAAS,CAACC,MAAM,IAAI,CAACI,eAAe,iBACrEf,OAAA;MAAQyB,OAAO,EAAEH,qBAAsB;MAACC,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACrG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACvB,EAAA,CAvDIH,gBAAgB;AAAAuC,EAAA,GAAhBvC,gBAAgB;AAyDtB,eAAeA,gBAAgB;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}