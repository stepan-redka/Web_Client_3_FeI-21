{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = ({\n  selectedQuestions,\n  onFinish\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const handleAnswerSelect = answerIndex => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [currentPage]: answerIndex\n    }));\n  };\n  const handleNextPage = () => {\n    if (currentPage < selectedQuestions.length - 1) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      const correctCount = Object.keys(answers).reduce((acc, index) => {\n        const questionIndex = parseInt(index);\n        const isCorrect = selectedQuestions[questionIndex].answers[answers[index]].isCorrect;\n        return isCorrect ? acc + 1 : acc;\n      }, 0);\n      setCorrectAnswersCount(correctCount);\n      setTestCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentPage + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      question: selectedQuestions[currentPage].question,\n      answers: selectedQuestions[currentPage].answers,\n      onAnswerSelect: handleAnswerSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), currentPage < selectedQuestions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextPage,\n      children: \"Next question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), currentPage === selectedQuestions.length - 1 && !testCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextPage,\n      children: \"Finish test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), testCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Right answers: \", correctAnswersCount, \" out of \", selectedQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onFinish,\n        children: \"Finish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"k3++OJNDPf+amZ9LcvSHlZkgjxk=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","Question","jsxDEV","_jsxDEV","Test","selectedQuestions","onFinish","_s","currentPage","setCurrentPage","answers","setAnswers","correctAnswersCount","setCorrectAnswersCount","testCompleted","setTestCompleted","handleAnswerSelect","answerIndex","prevAnswers","handleNextPage","length","correctCount","Object","keys","reduce","acc","index","questionIndex","parseInt","isCorrect","children","fileName","_jsxFileName","lineNumber","columnNumber","question","onAnswerSelect","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\n\nconst Test = ({ selectedQuestions, onFinish }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false); \n\n  const handleAnswerSelect = (answerIndex) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [currentPage]: answerIndex,\n    }));\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < selectedQuestions.length - 1) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      const correctCount = Object.keys(answers).reduce((acc, index) => {\n        const questionIndex = parseInt(index);\n        const isCorrect = selectedQuestions[questionIndex].answers[answers[index]].isCorrect;\n        return isCorrect ? acc + 1 : acc;\n      }, 0);\n      setCorrectAnswersCount(correctCount);\n      setTestCompleted(true); \n    }\n  };\n\n  return (\n    <div>\n      <h2>Question {currentPage + 1}</h2>\n      <Question\n        question={selectedQuestions[currentPage].question}\n        answers={selectedQuestions[currentPage].answers}\n        onAnswerSelect={handleAnswerSelect}\n      />\n      {currentPage < selectedQuestions.length - 1 && (\n        <button onClick={handleNextPage}>Next question</button>\n      )}\n      {currentPage === selectedQuestions.length - 1 && !testCompleted && (\n        <button onClick={handleNextPage}>Finish test</button>\n      )}\n      {testCompleted && (\n        <div>\n          <p>Right answers: {correctAnswersCount} out of {selectedQuestions.length}</p>\n          <button onClick={onFinish}>Finish</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}