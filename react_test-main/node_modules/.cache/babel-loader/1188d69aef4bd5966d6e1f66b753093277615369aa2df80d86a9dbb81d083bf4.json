{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\Test.js\";\nimport React from 'react';\nimport './Test.css'; // Додайте стилі для Test компонента\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = ({\n  selectedQuestions,\n  testData,\n  onShowResult,\n  onFinish\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"test-header\",\n      children: testData.testName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), selectedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test-question\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), question.answers.map((answer, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"test-answer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: `q${index}a${idx}`,\n          name: `question${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `q${index}a${idx}`,\n          children: answer.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onShowResult,\n      className: \"show-result-button\",\n      children: \"Show Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFinish,\n      className: \"finish-button\",\n      children: \"Finish\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Test","selectedQuestions","testData","onShowResult","onFinish","className","children","testName","fileName","_jsxFileName","lineNumber","columnNumber","map","question","index","answers","answer","idx","type","id","name","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/Test.js"],"sourcesContent":["import React from 'react';\nimport './Test.css'; // Додайте стилі для Test компонента\n\nconst Test = ({ selectedQuestions, testData, onShowResult, onFinish }) => {\n  return (\n    <div className=\"test-container\">\n      <h2 className=\"test-header\">{testData.testName}</h2>\n      {selectedQuestions.map((question, index) => (\n        <div key={index} className=\"test-question\">\n          <p>{question.question}</p>\n          {question.answers.map((answer, idx) => (\n            <div key={idx} className=\"test-answer\">\n              <input type=\"radio\" id={`q${index}a${idx}`} name={`question${index}`} />\n              <label htmlFor={`q${index}a${idx}`}>{answer.answer}</label>\n            </div>\n          ))}\n        </div>\n      ))}\n      <button onClick={onShowResult} className=\"show-result-button\">Show Results</button>\n      <button onClick={onFinish} className=\"finish-button\">Finish</button>\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,IAAI,GAAGA,CAAC;EAAEC,iBAAiB;EAAEC,QAAQ;EAAEC,YAAY;EAAEC;AAAS,CAAC,KAAK;EACxE,oBACEL,OAAA;IAAKM,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BP,OAAA;MAAIM,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAEJ,QAAQ,CAACK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACnDV,iBAAiB,CAACW,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBACrCf,OAAA;MAAiBM,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxCP,OAAA;QAAAO,QAAA,EAAIO,QAAQ,CAACA;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzBE,QAAQ,CAACE,OAAO,CAACH,GAAG,CAAC,CAACI,MAAM,EAAEC,GAAG,kBAChClB,OAAA;QAAeM,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACpCP,OAAA;UAAOmB,IAAI,EAAC,OAAO;UAACC,EAAE,EAAG,IAAGL,KAAM,IAAGG,GAAI,EAAE;UAACG,IAAI,EAAG,WAAUN,KAAM;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACxEZ,OAAA;UAAOsB,OAAO,EAAG,IAAGP,KAAM,IAAGG,GAAI,EAAE;UAAAX,QAAA,EAAEU,MAAM,CAACA;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFnDM,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGR,CACN,CAAC;IAAA,GAPMG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN,CAAC,eACFZ,OAAA;MAAQuB,OAAO,EAAEnB,YAAa;MAACE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnFZ,OAAA;MAAQuB,OAAO,EAAElB,QAAS;MAACC,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAACY,EAAA,GAnBIvB,IAAI;AAqBV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}