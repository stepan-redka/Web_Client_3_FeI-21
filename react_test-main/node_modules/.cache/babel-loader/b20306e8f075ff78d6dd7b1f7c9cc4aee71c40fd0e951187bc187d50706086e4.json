{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\QuestionSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './QuestionSelector.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionSelector = ({\n  testData,\n  onQuestionsSelect\n}) => {\n  _s();\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const handleQuestionToggle = questionIndex => {\n    const updatedQuestions = [...selectedQuestions];\n    updatedQuestions[questionIndex] = !updatedQuestions[questionIndex];\n    setSelectedQuestions(updatedQuestions);\n  };\n  const handleStartTest = () => {\n    const questionsToSend = testData.questions.filter((question, index) => selectedQuestions[index]);\n    onQuestionsSelect(questionsToSend);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-selector-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question-selector-header\",\n      children: \"Choose question:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), testData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedQuestions[index] || false,\n        onChange: () => handleQuestionToggle(index),\n        className: \"question-checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartTest,\n      className: \"start-test-button\",\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionSelector, \"ZArcmnD6R3UxPfDY20uKT2CzjrY=\");\n_c = QuestionSelector;\nexport default QuestionSelector;\nvar _c;\n$RefreshReg$(_c, \"QuestionSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionSelector","testData","onQuestionsSelect","_s","selectedQuestions","setSelectedQuestions","handleQuestionToggle","questionIndex","updatedQuestions","handleStartTest","questionsToSend","questions","filter","question","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/QuestionSelector.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './QuestionSelector.css'; \n\nconst QuestionSelector = ({ testData, onQuestionsSelect }) => {\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n\n  const handleQuestionToggle = (questionIndex) => {\n    const updatedQuestions = [...selectedQuestions];\n    updatedQuestions[questionIndex] = !updatedQuestions[questionIndex];\n    setSelectedQuestions(updatedQuestions);\n  };\n\n  const handleStartTest = () => {\n    const questionsToSend = testData.questions.filter((question, index) => selectedQuestions[index]);\n    onQuestionsSelect(questionsToSend);\n  };\n\n  return (\n    <div className=\"question-selector-container\">\n      <h2 className=\"question-selector-header\">Choose question:</h2>\n      {testData.questions.map((question, index) => (\n        <div key={index} className=\"question-item\">\n          <input\n            type=\"checkbox\"\n            checked={selectedQuestions[index] || false}\n            onChange={() => handleQuestionToggle(index)}\n            className=\"question-checkbox\"\n          />\n          <label>{question.question}</label>\n        </div>\n      ))}\n      <button onClick={handleStartTest} className=\"start-test-button\">Start Quiz</button>\n    </div>\n  );\n};\n\nexport default QuestionSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMS,oBAAoB,GAAIC,aAAa,IAAK;IAC9C,MAAMC,gBAAgB,GAAG,CAAC,GAAGJ,iBAAiB,CAAC;IAC/CI,gBAAgB,CAACD,aAAa,CAAC,GAAG,CAACC,gBAAgB,CAACD,aAAa,CAAC;IAClEF,oBAAoB,CAACG,gBAAgB,CAAC;EACxC,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,eAAe,GAAGT,QAAQ,CAACU,SAAS,CAACC,MAAM,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAKV,iBAAiB,CAACU,KAAK,CAAC,CAAC;IAChGZ,iBAAiB,CAACQ,eAAe,CAAC;EACpC,CAAC;EAED,oBACEX,OAAA;IAAKgB,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1CjB,OAAA;MAAIgB,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7DnB,QAAQ,CAACU,SAAS,CAACU,GAAG,CAAC,CAACR,QAAQ,EAAEC,KAAK,kBACtCf,OAAA;MAAiBgB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACxCjB,OAAA;QACEuB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEnB,iBAAiB,CAACU,KAAK,CAAC,IAAI,KAAM;QAC3CU,QAAQ,EAAEA,CAAA,KAAMlB,oBAAoB,CAACQ,KAAK,CAAE;QAC5CC,SAAS,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFrB,OAAA;QAAAiB,QAAA,EAAQH,QAAQ,CAACA;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAP1BN,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN,CAAC,eACFrB,OAAA;MAAQ0B,OAAO,EAAEhB,eAAgB;MAACM,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChF,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/BIH,gBAAgB;AAAA0B,EAAA,GAAhB1B,gBAAgB;AAiCtB,eAAeA,gBAAgB;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}