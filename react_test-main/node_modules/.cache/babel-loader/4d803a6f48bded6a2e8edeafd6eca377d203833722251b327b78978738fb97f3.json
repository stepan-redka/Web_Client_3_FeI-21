{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = ({\n  selectedQuestions\n}) => {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n  const handleAnswerSelect = answerIndex => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [currentPage]: answerIndex\n    }));\n  };\n  const handleNextPage = () => {\n    if (currentPage < selectedQuestions.length - 1) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      const correctCount = Object.keys(answers).reduce((acc, index) => {\n        const questionIndex = parseInt(index);\n        const isCorrect = selectedQuestions[questionIndex].answers[answers[index]].isCorrect;\n        return isCorrect ? acc + 1 : acc;\n      }, 0);\n      setCorrectAnswersCount(correctCount);\n      setTestCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: testCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User Score: \", correctAnswersCount, \"/\", selectedQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"k3++OJNDPf+amZ9LcvSHlZkgjxk=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","Question","jsxDEV","_jsxDEV","Test","selectedQuestions","_s","currentPage","setCurrentPage","answers","setAnswers","correctAnswersCount","setCorrectAnswersCount","testCompleted","setTestCompleted","handleAnswerSelect","answerIndex","prevAnswers","handleNextPage","length","correctCount","Object","keys","reduce","acc","index","questionIndex","parseInt","isCorrect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Question from './Question';\n\nconst Test = ({ selectedQuestions }) => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [correctAnswersCount, setCorrectAnswersCount] = useState(0);\n  const [testCompleted, setTestCompleted] = useState(false);\n\n  const handleAnswerSelect = (answerIndex) => {\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [currentPage]: answerIndex,\n    }));\n  };\n\n  const handleNextPage = () => {\n    if (currentPage < selectedQuestions.length - 1) {\n      setCurrentPage(currentPage + 1);\n    } else {\n      const correctCount = Object.keys(answers).reduce((acc, index) => {\n        const questionIndex = parseInt(index);\n        const isCorrect =\n          selectedQuestions[questionIndex].answers[answers[index]].isCorrect;\n        return isCorrect ? acc + 1 : acc;\n      }, 0);\n      setCorrectAnswersCount(correctCount);\n      setTestCompleted(true);\n    }\n  };\n\n  return (\n    <div>\n      {testCompleted && (\n        <div>\n          <h2>Test Results</h2>\n          <p>User Score: {correctAnswersCount}/{selectedQuestions.length}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMe,kBAAkB,GAAIC,WAAW,IAAK;IAC1CN,UAAU,CAAEO,WAAW,KAAM;MAC3B,GAAGA,WAAW;MACd,CAACV,WAAW,GAAGS;IACjB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIX,WAAW,GAAGF,iBAAiB,CAACc,MAAM,GAAG,CAAC,EAAE;MAC9CX,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM;MACL,MAAMa,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACb,OAAO,CAAC,CAACc,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;QAC/D,MAAMC,aAAa,GAAGC,QAAQ,CAACF,KAAK,CAAC;QACrC,MAAMG,SAAS,GACbvB,iBAAiB,CAACqB,aAAa,CAAC,CAACjB,OAAO,CAACA,OAAO,CAACgB,KAAK,CAAC,CAAC,CAACG,SAAS;QACpE,OAAOA,SAAS,GAAGJ,GAAG,GAAG,CAAC,GAAGA,GAAG;MAClC,CAAC,EAAE,CAAC,CAAC;MACLZ,sBAAsB,CAACQ,YAAY,CAAC;MACpCN,gBAAgB,CAAC,IAAI,CAAC;IACxB;EACF,CAAC;EAED,oBACEX,OAAA;IAAA0B,QAAA,EACGhB,aAAa,iBACZV,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB9B,OAAA;QAAA0B,QAAA,GAAG,cAAY,EAAClB,mBAAmB,EAAC,GAAC,EAACN,iBAAiB,CAACc,MAAM;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAtCIF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAwCV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}