{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = ({\n  selectedQuestions,\n  onShowResult\n}) => {\n  _s();\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [correctCount, setCorrectCount] = useState(0);\n  const handleAnswerSelect = answerIndex => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [currentIndex]: answerIndex\n    }));\n\n    // Move to the next question\n    if (currentIndex < selectedQuestions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      // Calculate the number of correct answers when all questions are answered\n      const count = Object.keys(answers).reduce((acc, index) => {\n        const isCorrect = selectedQuestions[index].answers[answers[index]].isCorrect;\n        return isCorrect ? acc + 1 : acc;\n      }, 0);\n      setCorrectCount(count);\n      onShowResult();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Question \", currentIndex + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedQuestions[currentIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), selectedQuestions[currentIndex].answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: `answer-${answerIndex}`,\n        name: \"answer\",\n        onChange: () => handleAnswerSelect(answerIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `answer-${answerIndex}`,\n        children: answer.answer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, answerIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)), currentIndex === selectedQuestions.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnswerSelect,\n      children: \"Submit answers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"CJzfUoLEaqltRlAVHIQrOSjfXfw=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test","selectedQuestions","onShowResult","_s","currentIndex","setCurrentIndex","answers","setAnswers","correctCount","setCorrectCount","handleAnswerSelect","answerIndex","prevAnswers","length","count","Object","keys","reduce","acc","index","isCorrect","children","fileName","_jsxFileName","lineNumber","columnNumber","question","map","answer","type","id","name","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Test = ({ selectedQuestions, onShowResult }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [correctCount, setCorrectCount] = useState(0);\n\n  const handleAnswerSelect = (answerIndex) => {\n    setAnswers((prevAnswers) => ({\n      ...prevAnswers,\n      [currentIndex]: answerIndex,\n    }));\n\n    // Move to the next question\n    if (currentIndex < selectedQuestions.length - 1) {\n      setCurrentIndex(currentIndex + 1);\n    } else {\n      // Calculate the number of correct answers when all questions are answered\n      const count = Object.keys(answers).reduce((acc, index) => {\n        const isCorrect = selectedQuestions[index].answers[answers[index]].isCorrect;\n        return isCorrect ? acc + 1 : acc;\n      }, 0);\n      setCorrectCount(count);\n      onShowResult();\n    }\n  };\n\n  return (\n    <div>\n      <h2>Question {currentIndex + 1}</h2>\n      <p>{selectedQuestions[currentIndex].question}</p>\n      {selectedQuestions[currentIndex].answers.map((answer, answerIndex) => (\n        <div key={answerIndex}>\n          <input\n            type=\"radio\"\n            id={`answer-${answerIndex}`}\n            name=\"answer\"\n            onChange={() => handleAnswerSelect(answerIndex)}\n          />\n          <label htmlFor={`answer-${answerIndex}`}>{answer.answer}</label>\n        </div>\n      ))}\n      {currentIndex === selectedQuestions.length - 1 && (\n        <button onClick={handleAnswerSelect}>Submit answers</button>\n      )}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}