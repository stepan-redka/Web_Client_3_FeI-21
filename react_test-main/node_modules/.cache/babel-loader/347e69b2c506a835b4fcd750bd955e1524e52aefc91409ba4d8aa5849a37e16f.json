{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport QuestionSelector from './QuestionSelector';\nimport Test from './Test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst testData = {\n  testName: \"Bakery Test\",\n  questions: [{\n    question: \"Which ingredient is essential for making bread rise?\",\n    answers: [{\n      answer: \"Yeast\",\n      isCorrect: true\n    }, {\n      answer: \"Sugar\",\n      isCorrect: false\n    }, {\n      answer: \"Salt\",\n      isCorrect: false\n    }, {\n      answer: \"Butter\",\n      isCorrect: false\n    }]\n  }, {\n    question: \"What is the main ingredient in croissants?\",\n    answers: [{\n      answer: \"Butter\",\n      isCorrect: true\n    }, {\n      answer: \"Sugar\",\n      isCorrect: false\n    }, {\n      answer: \"Flour\",\n      isCorrect: false\n    }, {\n      answer: \"Eggs\",\n      isCorrect: false\n    }]\n  }, {\n    question: \"What type of flour is typically used to make cakes?\",\n    answers: [{\n      answer: \"Cake flour\",\n      isCorrect: true\n    }, {\n      answer: \"All-purpose flour\",\n      isCorrect: false\n    }, {\n      answer: \"Whole wheat flour\",\n      isCorrect: false\n    }, {\n      answer: \"Bread flour\",\n      isCorrect: false\n    }]\n  }]\n};\nconst App = () => {\n  _s();\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n  const handleQuestionsSelect = selectedQuestions => {\n    setSelectedQuestions(selectedQuestions);\n    setShowResult(false);\n  };\n  const handleShowResult = () => {\n    setShowResult(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: selectedQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(QuestionSelector, {\n      testData: testData,\n      onQuestionsSelect: handleQuestionsSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Test, {\n      selectedQuestions: selectedQuestions,\n      testData: testData,\n      onShowResult: handleShowResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"re5vCl7hbolBTCw+VAvEo5F5wuc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","QuestionSelector","Test","jsxDEV","_jsxDEV","testData","testName","questions","question","answers","answer","isCorrect","App","_s","selectedQuestions","setSelectedQuestions","showResult","setShowResult","handleQuestionsSelect","handleShowResult","className","children","length","onQuestionsSelect","fileName","_jsxFileName","lineNumber","columnNumber","onShowResult","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport QuestionSelector from './QuestionSelector';\nimport Test from './Test';\n\nconst testData = {\n  testName: \"Bakery Test\",\n  questions: [\n    {\n      question: \"Which ingredient is essential for making bread rise?\",\n      answers: [\n        {\n          answer: \"Yeast\",\n          isCorrect: true,\n        },\n        {\n          answer: \"Sugar\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Salt\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Butter\",\n          isCorrect: false,\n        }\n      ],\n    },\n    {\n      question: \"What is the main ingredient in croissants?\",\n      answers: [\n        {\n          answer: \"Butter\",\n          isCorrect: true,\n        },\n        {\n          answer: \"Sugar\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Flour\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Eggs\",\n          isCorrect: false,\n        }\n      ],\n    },\n    {\n      question: \"What type of flour is typically used to make cakes?\",\n      answers: [\n        {\n          answer: \"Cake flour\",\n          isCorrect: true,\n        },\n        {\n          answer: \"All-purpose flour\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Whole wheat flour\",\n          isCorrect: false,\n        },\n        {\n          answer: \"Bread flour\",\n          isCorrect: false,\n        }\n      ],\n    }\n  ],\n};\nconst App = () => {\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n  const [showResult, setShowResult] = useState(false);\n\n  const handleQuestionsSelect = (selectedQuestions) => {\n    setSelectedQuestions(selectedQuestions);\n    setShowResult(false);\n  };\n\n  const handleShowResult = () => {\n    setShowResult(true);\n  };\n\n  return (\n    <div className=\"App\">\n      {selectedQuestions.length === 0 ? (\n        <QuestionSelector testData={testData} onQuestionsSelect={handleQuestionsSelect} />\n      ) : (\n        <Test selectedQuestions={selectedQuestions} testData={testData} onShowResult={handleShowResult} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAG;EACfC,QAAQ,EAAE,aAAa;EACvBC,SAAS,EAAE,CACT;IACEC,QAAQ,EAAE,sDAAsD;IAChEC,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE;IACb,CAAC;EAEL,CAAC,EACD;IACEH,QAAQ,EAAE,4CAA4C;IACtDC,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,QAAQ;MAChBC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,OAAO;MACfC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,MAAM;MACdC,SAAS,EAAE;IACb,CAAC;EAEL,CAAC,EACD;IACEH,QAAQ,EAAE,qDAAqD;IAC/DC,OAAO,EAAE,CACP;MACEC,MAAM,EAAE,YAAY;MACpBC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,mBAAmB;MAC3BC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,mBAAmB;MAC3BC,SAAS,EAAE;IACb,CAAC,EACD;MACED,MAAM,EAAE,aAAa;MACrBC,SAAS,EAAE;IACb,CAAC;EAEL,CAAC;AAEL,CAAC;AACD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMkB,qBAAqB,GAAIJ,iBAAiB,IAAK;IACnDC,oBAAoB,CAACD,iBAAiB,CAAC;IACvCG,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;IAC7BF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACEb,OAAA;IAAKgB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBP,iBAAiB,CAACQ,MAAM,KAAK,CAAC,gBAC7BlB,OAAA,CAACH,gBAAgB;MAACI,QAAQ,EAAEA,QAAS;MAACkB,iBAAiB,EAAEL;IAAsB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAElFvB,OAAA,CAACF,IAAI;MAACY,iBAAiB,EAAEA,iBAAkB;MAACT,QAAQ,EAAEA,QAAS;MAACuB,YAAY,EAAET;IAAiB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAClG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACd,EAAA,CAtBID,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAwBT,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}