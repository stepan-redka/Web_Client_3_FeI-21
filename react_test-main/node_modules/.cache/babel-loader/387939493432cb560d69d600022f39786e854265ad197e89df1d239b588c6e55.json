{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\Test.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = ({\n  selectedQuestions,\n  onFinish\n}) => {\n  _s();\n  const [answers, setAnswers] = useState({});\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [correctCount, setCorrectCount] = useState(0);\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionIndex]: answerIndex\n    }));\n  };\n  const handleNextPage = () => {\n    if (Object.keys(answers).length < selectedQuestions.length) {\n      return; // Ensure all questions are answered before proceeding\n    }\n    const count = Object.keys(answers).reduce((acc, index) => {\n      const isCorrect = selectedQuestions[index].answers[answers[index]].isCorrect;\n      return isCorrect ? acc + 1 : acc;\n    }, 0);\n    setTestCompleted(true);\n    setCorrectCount(count);\n    onFinish(count);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: testCompleted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User Score: \", correctCount, \"/\", selectedQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [selectedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Question \", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), question.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: `answer-${index}-${answerIndex}`,\n            name: `answer-${index}`,\n            onChange: () => handleAnswerSelect(index, answerIndex)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `answer-${index}-${answerIndex}`,\n            children: answer.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this)]\n        }, answerIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this))]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextPage,\n        children: \"Submit answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"8/f5mpODqPK/X3QASt2SifFMh14=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Test","selectedQuestions","onFinish","_s","answers","setAnswers","testCompleted","setTestCompleted","correctCount","setCorrectCount","handleAnswerSelect","questionIndex","answerIndex","prevAnswers","handleNextPage","Object","keys","length","count","reduce","acc","index","isCorrect","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","answer","type","id","name","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Test = ({ selectedQuestions, onFinish }) => {\n  const [answers, setAnswers] = useState({});\n  const [testCompleted, setTestCompleted] = useState(false);\n  const [correctCount, setCorrectCount] = useState(0);\n\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    setAnswers(prevAnswers => ({\n      ...prevAnswers,\n      [questionIndex]: answerIndex,\n    }));\n  };\n\n  const handleNextPage = () => {\n    if (Object.keys(answers).length < selectedQuestions.length) {\n      return; // Ensure all questions are answered before proceeding\n    }\n\n    const count = Object.keys(answers).reduce((acc, index) => {\n      const isCorrect = selectedQuestions[index].answers[answers[index]].isCorrect;\n      return isCorrect ? acc + 1 : acc;\n    }, 0);\n\n    setTestCompleted(true);\n    setCorrectCount(count);\n    onFinish(count);\n  };\n\n  return (\n    <div>\n      {testCompleted ? (\n        <div>\n          <h2>Test Results</h2>\n          <p>User Score: {correctCount}/{selectedQuestions.length}</p>\n        </div>\n      ) : (\n        <div>\n          {selectedQuestions.map((question, index) => (\n            <div key={index}>\n              <h3>Question {index + 1}</h3>\n              <p>{question.question}</p>\n              {question.answers.map((answer, answerIndex) => (\n                <div key={answerIndex}>\n                  <input\n                    type=\"radio\"\n                    id={`answer-${index}-${answerIndex}`}\n                    name={`answer-${index}`}\n                    onChange={() => handleAnswerSelect(index, answerIndex)}\n                  />\n                  <label htmlFor={`answer-${index}-${answerIndex}`}>{answer.answer}</label>\n                </div>\n              ))}\n            </div>\n          ))}\n          <button onClick={handleNextPage}>Submit answers</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Test;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}