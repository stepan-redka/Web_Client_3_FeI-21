{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Stepan\\\\Documents\\\\LAbs\\\\Web\\\\Lab_3\\\\react_test-main\\\\src\\\\QuestionSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './QuestionSelector.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuestionSelector = ({\n  testData,\n  onQuestionsSelect\n}) => {\n  _s();\n  const [selectedQuestions, setSelectedQuestions] = useState(Array(testData.questions.length).fill(false));\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showQuestions, setShowQuestions] = useState(false);\n  const handleQuestionToggle = questionIndex => {\n    const updatedQuestions = [...selectedQuestions];\n    updatedQuestions[questionIndex] = !updatedQuestions[questionIndex];\n    setSelectedQuestions(updatedQuestions);\n  };\n  const handleStartTest = () => {\n    setShowQuestions(true);\n  };\n  const handleQuestionsSubmit = () => {\n    const questionsToSend = testData.questions.filter((question, index) => selectedQuestions[index]);\n    if (questionsToSend.length === 0) {\n      setErrorMessage(\"Please select at least one question.\");\n    } else {\n      setErrorMessage(\"\");\n      onQuestionsSelect(questionsToSend);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-selector-container\",\n    children: [showQuestions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleQuestionsSubmit,\n        className: \"start-test-button\",\n        children: \"Submit Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-selector-header\",\n        children: \"Choose questions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), testData.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedQuestions[index],\n          onChange: () => handleQuestionToggle(index),\n          className: \"question-checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true), !showQuestions && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartTest,\n      className: \"start-test-button\",\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionSelector, \"ZyuLYggwMCzVoT1Pwpw5wYziL9s=\");\n_c = QuestionSelector;\nexport default QuestionSelector;\nvar _c;\n$RefreshReg$(_c, \"QuestionSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QuestionSelector","testData","onQuestionsSelect","_s","selectedQuestions","setSelectedQuestions","Array","questions","length","fill","errorMessage","setErrorMessage","showQuestions","setShowQuestions","handleQuestionToggle","questionIndex","updatedQuestions","handleStartTest","handleQuestionsSubmit","questionsToSend","filter","question","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Stepan/Documents/LAbs/Web/Lab_3/react_test-main/src/QuestionSelector.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './QuestionSelector.css'; \n\nconst QuestionSelector = ({ testData, onQuestionsSelect }) => {\n  const [selectedQuestions, setSelectedQuestions] = useState(Array(testData.questions.length).fill(false));\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showQuestions, setShowQuestions] = useState(false);\n\n  const handleQuestionToggle = (questionIndex) => {\n    const updatedQuestions = [...selectedQuestions];\n    updatedQuestions[questionIndex] = !updatedQuestions[questionIndex];\n    setSelectedQuestions(updatedQuestions);\n  };\n\n  const handleStartTest = () => {\n    setShowQuestions(true);\n  };\n\n  const handleQuestionsSubmit = () => {\n    const questionsToSend = testData.questions.filter((question, index) => selectedQuestions[index]);\n    if (questionsToSend.length === 0) {\n      setErrorMessage(\"Please select at least one question.\");\n    } else {\n      setErrorMessage(\"\");\n      onQuestionsSelect(questionsToSend);\n    }\n  };\n\n  return (\n    <div className=\"question-selector-container\">\n      {showQuestions && (\n        <>\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n          <button onClick={handleQuestionsSubmit} className=\"start-test-button\">Submit Questions</button>\n          <h2 className=\"question-selector-header\">Choose questions:</h2>\n          {testData.questions.map((question, index) => (\n            <div key={index} className=\"question-item\">\n              <input\n                type=\"checkbox\"\n                checked={selectedQuestions[index]}\n                onChange={() => handleQuestionToggle(index)}\n                className=\"question-checkbox\"\n              />\n              <label>{question.question}</label>\n            </div>\n          ))}\n        </>\n      )}\n      {!showQuestions && (\n        <button onClick={handleStartTest} className=\"start-test-button\">Start Quiz</button>\n      )}\n    </div>\n  );\n};\n\nexport default QuestionSelector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}